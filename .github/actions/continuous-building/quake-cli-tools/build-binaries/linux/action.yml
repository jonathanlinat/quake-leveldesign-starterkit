inputs:
  ARTIFACT_FILENAME:
    required: true
  ARTIFACT_REPOSITORY:
    required: true
  CICD_OPERATING_SYSTEM_NAME:
    required: true
runs:
  using: composite
  steps:
    - name: Checkout the artifact repository files
      uses: ./.github/actions/_shared/checkout-artifact-repository-files
      with:
        ARTIFACT_REPOSITORY: ${{ inputs.ARTIFACT_REPOSITORY }}
    - name: Set the current commit HEAD SHA
      uses: ./.github/actions/_shared/set-current-commit-head-sha
      with:
        CICD_WORKING_DIRECTORY: working-directory/
    - name: Restore the artifact from cache
      id: cache-restore
      uses: ./.github/actions/_shared/cache-restore
      with:
        PATH: working-directory/${{ inputs.ARTIFACT_FILENAME }}-files-${{ inputs.CICD_OPERATING_SYSTEM_NAME }}/
        CACHE_KEY: ${{ inputs.ARTIFACT_FILENAME }}-files-${{ inputs.CICD_OPERATING_SYSTEM_NAME }}-${{ env.GIT_CURRENT_COMMIT_HEAD_SHA }}
    - name: Restore pip cache
      if: steps.cache-restore.outputs.CACHE_HIT != 'true'
      id: cache-pip
      uses: ./.github/actions/_shared/cache-restore
      with:
        PATH: ~/.cache/pip
        CACHE_KEY: pip-${{ inputs.CICD_OPERATING_SYSTEM_NAME }}-${{ hashFiles('working-directory/requirements*.txt') }}
    - name: Install Python requirements
      if: steps.cache-restore.outputs.CACHE_HIT != 'true' && steps.cache-pip.outputs.CACHE_HIT != 'true'
      working-directory: working-directory/
      run: |
        set -euo pipefail
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
      shell: bash
    - name: Save pip cache
      if: steps.cache-restore.outputs.CACHE_HIT != 'true' && steps.cache-pip.outputs.CACHE_HIT != 'true'
      uses: ./.github/actions/_shared/cache-save
      with:
        PATH: ~/.cache/pip
        CACHE_KEY: pip-${{ inputs.CICD_OPERATING_SYSTEM_NAME }}-${{ hashFiles('working-directory/requirements*.txt') }}
    - name: Compile the source code
      if: steps.cache-restore.outputs.CACHE_HIT != 'true'
      working-directory: working-directory/
      run: |
        set -euo pipefail
        make build
      shell: bash
    - name: Prepare the artifact
      if: steps.cache-restore.outputs.CACHE_HIT != 'true'
      working-directory: working-directory/
      run: |
        set -euo pipefail
        make package
        7z x "${{ inputs.ARTIFACT_FILENAME }}-*-${{ inputs.CICD_OPERATING_SYSTEM_NAME }}.zip" -y
        mv ${{ inputs.ARTIFACT_FILENAME }}-*-${{ inputs.CICD_OPERATING_SYSTEM_NAME }}/ ${{ inputs.ARTIFACT_FILENAME }}-files-${{ inputs.CICD_OPERATING_SYSTEM_NAME }}/
      shell: bash
    - name: Save the artifact as cache
      if: steps.cache-restore.outputs.CACHE_HIT != 'true'
      uses: ./.github/actions/_shared/cache-save
      with:
        PATH: working-directory/${{ inputs.ARTIFACT_FILENAME }}-files-${{ inputs.CICD_OPERATING_SYSTEM_NAME }}/
        CACHE_KEY: ${{ inputs.ARTIFACT_FILENAME }}-files-${{ inputs.CICD_OPERATING_SYSTEM_NAME }}-${{ env.GIT_CURRENT_COMMIT_HEAD_SHA }}
