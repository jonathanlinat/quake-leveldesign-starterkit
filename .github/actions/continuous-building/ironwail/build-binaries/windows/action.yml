inputs:
  ARTIFACT_FILENAME:
    required: true
  ARTIFACT_REPOSITORY:
    required: true
  CICD_OPERATING_SYSTEM_NAME:
    required: true
runs:
  using: composite
  steps:
    - name: Checkout the artifact repository files
      uses: ./.github/actions/_shared/checkout-artifact-repository-files
      with:
        ARTIFACT_REPOSITORY: ${{ inputs.ARTIFACT_REPOSITORY }}
    - name: Set the current commit HEAD SHA
      uses: ./.github/actions/_shared/set-current-commit-head-sha
      with:
        CICD_WORKING_DIRECTORY: working-directory/
    - name: Restore the artifact from cache
      id: restore-artifact-cache
      uses: ./.github/actions/_shared/restore-artifact-cache
      with:
        ARTIFACT_PATH: working-directory/${{ inputs.ARTIFACT_FILENAME }}-files-${{ inputs.CICD_OPERATING_SYSTEM_NAME }}/
        CACHE_KEY: ${{ inputs.ARTIFACT_FILENAME }}-files-${{ inputs.CICD_OPERATING_SYSTEM_NAME }}-${{ env.GIT_CURRENT_COMMIT_HEAD_SHA }}
    - name: Set specific environment variables
      if: steps.restore-artifact-cache.outputs.CACHE_HIT != 'true'
      working-directory: working-directory/
      run: |
        $ErrorActionPreference = 'Stop'
        $gitrev = $(git describe --always)
        $gitbranch = $(git branch --show-current)
        $ver_suffix = ("$gitbranch" -eq "master" -Or "$gitbranch" -eq "main") ? "-$gitrev" : "-$gitbranch-$gitrev"
        $platform_alt = "win64"
        $platform_short = "x64"
        $build_artifact = "${env:ARTIFACT_FILENAME}-files-${env:CICD_OPERATING_SYSTEM_NAME}"
        echo "VER_SUFFIX=$ver_suffix" >> ${env:GITHUB_ENV}
        echo "BUILD_ARTIFACT=$build_artifact" >> ${env:GITHUB_ENV}
        echo "BUILD_DIR=$build_artifact" >> ${env:GITHUB_ENV}
        echo "PLATFORM_ALT=$platform_alt" >> ${env:GITHUB_ENV}
        echo "PLATFORM_SHORT=$platform_short" >> ${env:GITHUB_ENV}
        echo "ForceImportBeforeCppTargets=${env:GITHUB_WORKSPACE}\working-directory\Windows\VisualStudio\custom_build.props" >> ${env:GITHUB_ENV}
      shell: pwsh
      env:
        ARTIFACT_FILENAME: ${{ inputs.ARTIFACT_FILENAME }}
        CICD_OPERATING_SYSTEM_NAME: ${{ inputs.CICD_OPERATING_SYSTEM_NAME }}
    - name: Compile the source code
      if: steps.restore-artifact-cache.outputs.CACHE_HIT != 'true'
      working-directory: working-directory/
      run: |
        $ErrorActionPreference = 'Stop'
        $msbuild = & "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -latest -requires Microsoft.Component.MSBuild -find MSBuild\**\Bin\MSBuild.exe | Select-Object -First 1
        & $msbuild Windows\VisualStudio\${env:ARTIFACT_FILENAME}.sln -property:Configuration=Release -property:Platform=x64 -maxcpucount -verbosity:minimal
        if (-not $?) { throw "Build failed" }
      shell: pwsh
      env:
        ARTIFACT_FILENAME: ${{ inputs.ARTIFACT_FILENAME }}
    - name: Prepare the artifact
      if: steps.restore-artifact-cache.outputs.CACHE_HIT != 'true'
      working-directory: working-directory/
      run: |
        $ErrorActionPreference = 'Stop'
        $compiledir = "Windows\VisualStudio\${env:BUILD_DIR}"
        $zipdir = "${env:BUILD_ARTIFACT}"
        mkdir -p $zipdir | Out-Null
        copy ${compiledir}\*.exe $zipdir
        copy ${compiledir}\*.dll $zipdir
        copy Quake\${env:ARTIFACT_FILENAME}.pak $zipdir
        copy Quakespasm.html $zipdir
        copy Quakespasm.txt $zipdir
        copy Quakespasm-Music.txt $zipdir
        copy LICENSE.txt $zipdir
      shell: pwsh
      env:
        ARTIFACT_FILENAME: ${{ inputs.ARTIFACT_FILENAME }}
    - name: Save the artifact as cache
      if: steps.restore-artifact-cache.outputs.CACHE_HIT != 'true'
      uses: ./.github/actions/_shared/save-artifact-cache
      with:
        ARTIFACT_PATH: working-directory/${{ inputs.ARTIFACT_FILENAME }}-files-${{ inputs.CICD_OPERATING_SYSTEM_NAME }}/
        CACHE_KEY: ${{ inputs.ARTIFACT_FILENAME }}-files-${{ inputs.CICD_OPERATING_SYSTEM_NAME }}-${{ env.GIT_CURRENT_COMMIT_HEAD_SHA }}
