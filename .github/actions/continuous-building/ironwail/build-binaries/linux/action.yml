inputs:
  ARTIFACT_FILENAME:
    required: true
  ARTIFACT_REPOSITORY:
    required: true
  CICD_OPERATING_SYSTEM_NAME:
    required: true
runs:
  using: composite
  steps:
    - name: Checkout the artifact repository files
      uses: ./.github/actions/_shared/checkout-artifact-repository-files
      with:
        ARTIFACT_REPOSITORY: ${{ inputs.ARTIFACT_REPOSITORY }}
    - name: Set the current commit HEAD SHA
      uses: ./.github/actions/_shared/set-current-commit-head-sha
      with:
        CICD_WORKING_DIRECTORY: working-directory/
    - name: Restore the artifact from cache
      id: restore-cached-artifact
      uses: ./.github/actions/_shared/restore-artifact-cache
      with:
        ARTIFACT_PATH: working-directory/${{ inputs.ARTIFACT_FILENAME }}-files-${{ inputs.CICD_OPERATING_SYSTEM_NAME }}/
        CACHE_KEY: ${{ inputs.ARTIFACT_FILENAME }}-files-${{ inputs.CICD_OPERATING_SYSTEM_NAME }}-${{ env.GIT_CURRENT_COMMIT_HEAD_SHA }}
    - name: Restore apt packages from cache
      if: steps.restore-cached-artifact.outputs.CACHE_HIT != 'true'
      id: restore-apt-cache
      uses: ./.github/actions/_shared/restore-artifact-cache
      with:
        ARTIFACT_PATH: /var/cache/apt/archives
        CACHE_KEY: apt-${{ inputs.ARTIFACT_FILENAME }}-${{ inputs.CICD_OPERATING_SYSTEM_NAME }}
    - name: Install dependencies
      if: steps.restore-apt-cache.outputs.CACHE_HIT != 'true'
      working-directory: working-directory/
      run: |
        sudo apt update
        sudo apt install -y --no-install-recommends libcurl4-openssl-dev libmpg123-dev libsdl2-dev libvorbis-dev
      shell: bash
    - name: Save apt packages as cache
      if: steps.restore-cached-artifact.outputs.CACHE_HIT != 'true' && steps.restore-apt-cache.outputs.CACHE_HIT != 'true'
      uses: ./.github/actions/_shared/save-artifact-cache
      with:
        ARTIFACT_PATH: /var/cache/apt/archives
        CACHE_KEY: apt-${{ inputs.ARTIFACT_FILENAME }}-${{ inputs.CICD_OPERATING_SYSTEM_NAME }}
    - name: Compile the source code
      if: steps.restore-cached-artifact.outputs.CACHE_HIT != 'true'
      working-directory: working-directory/
      run: make --jobs=3 --keep-going --directory=Quake CC=gcc
      shell: bash
    - name: Prepare the artifact
      if: steps.restore-cached-artifact.outputs.CACHE_HIT != 'true'
      working-directory: working-directory/
      run: |
        mkdir -p ${{ inputs.ARTIFACT_FILENAME }}-files-${{ inputs.CICD_OPERATING_SYSTEM_NAME }}/
        cp Quake/${{ inputs.ARTIFACT_FILENAME }} ${{ inputs.ARTIFACT_FILENAME }}-files-${{ inputs.CICD_OPERATING_SYSTEM_NAME }}/${{ inputs.ARTIFACT_FILENAME }}
        cp Quake/${{ inputs.ARTIFACT_FILENAME }}.pak ${{ inputs.ARTIFACT_FILENAME }}-files-${{ inputs.CICD_OPERATING_SYSTEM_NAME }}/${{ inputs.ARTIFACT_FILENAME }}.pak
      shell: bash
    - name: Save the artifact as cache
      if: steps.restore-cached-artifact.outputs.CACHE_HIT != 'true'
      uses: ./.github/actions/_shared/save-artifact-cache
      with:
        ARTIFACT_PATH: working-directory/${{ inputs.ARTIFACT_FILENAME }}-files-${{ inputs.CICD_OPERATING_SYSTEM_NAME }}/
        CACHE_KEY: ${{ inputs.ARTIFACT_FILENAME }}-files-${{ inputs.CICD_OPERATING_SYSTEM_NAME }}-${{ env.GIT_CURRENT_COMMIT_HEAD_SHA }}
