inputs:
  DESTINATION_PATH:
    required: true
  DOWNLOAD_URL:
    required: true
  FILENAME:
    required: true
  FILE_TYPE:
    required: true
runs:
  using: composite
  steps:
    - id: check-version
      run: |
        set -euo pipefail
        HEADERS=$(curl -sIL "${{ inputs.DOWNLOAD_URL }}" --max-time 30 --retry 2 || echo "")
        if [ -z "$HEADERS" ]; then
          VERSION="url-fallback"
        else
          VERSION=$(echo "$HEADERS" | grep -i '^etag:' | tail -n1 | cut -d' ' -f2 | tr -d '\r"' || echo "")
          if [ -z "$VERSION" ]; then
            VERSION=$(echo "$HEADERS" | grep -i '^last-modified:' | tail -n1 | cut -d' ' -f2- | tr -d '\r' || echo "")
          fi
          if [ -z "$VERSION" ]; then
            VERSION=$(echo "$HEADERS" | grep -i '^content-length:' | tail -n1 | cut -d' ' -f2 | tr -d '\r' || echo "")
          fi
          if [ -z "$VERSION" ]; then
            VERSION="url-fallback"
          fi
        fi
        if [ "$VERSION" = "url-fallback" ]; then
          VERSION_HASH=$(echo "${{ inputs.DOWNLOAD_URL }}" | sha256sum | cut -d' ' -f1 | cut -c1-16)
        else
          VERSION_HASH=$(echo "$VERSION" | sha256sum | cut -d' ' -f1 | cut -c1-16)
        fi
        echo "CACHE_KEY=extras-${{ inputs.FILENAME }}-${VERSION_HASH}" >> $GITHUB_OUTPUT
      shell: bash
    - uses: actions/cache/restore@0057852bfaa89a56745cba8c7296529d2fc39830
      id: cache-restore
      with:
        key: ${{ steps.check-version.outputs.CACHE_KEY }}
        path: working-directory/extras-cache/${{ inputs.FILENAME }}/
    - if: steps.cache-restore.outputs.cache-hit != 'true'
      working-directory: working-directory/
      run: |
        set -euo pipefail
        mkdir -p extras-cache/${{ inputs.FILENAME }}/
        curl -L "${{ inputs.DOWNLOAD_URL }}" -o "extras-cache/${{ inputs.FILENAME }}/download.${{ inputs.FILE_TYPE }}" --retry 3 --retry-delay 5 --retry-max-time 600 --max-time 600 --fail --show-error
      shell: bash
    - uses: actions/cache/save@0057852bfaa89a56745cba8c7296529d2fc39830
      if: steps.cache-restore.outputs.cache-hit != 'true'
      with:
        key: ${{ steps.check-version.outputs.CACHE_KEY }}
        path: working-directory/extras-cache/${{ inputs.FILENAME }}/
    - working-directory: working-directory/
      run: |
        set -euo pipefail
        mkdir -p "${{ inputs.DESTINATION_PATH }}"
        7z x "extras-cache/${{ inputs.FILENAME }}/download.${{ inputs.FILE_TYPE }}" -o"${{ inputs.DESTINATION_PATH }}" -y
      shell: bash
